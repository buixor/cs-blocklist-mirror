{{ if not $.IPv6Only }}
/ip/firewall/address-list/remove [ find where list="{{$.ListName}}" ];
:global {{$.NameOfMikrotikFunction}};
:set {{$.NameOfMikrotikFunction}} do={
    :do { /ip/firewall/address-list/add list={{$.ListName}} address=$1 comment="$2" timeout=$3; } on-error={ }
}
{{ end -}}

{{ if not $.IPv4Only }}
/ipv6/firewall/address-list/remove [ find where list="{{$.ListName}}" ];
:global {{$.NameOfMikrotikFunction}}v6;
:set {{$.NameOfMikrotikFunction}}v6 do={
    :do { /ipv6/firewall/address-list/add list={{$.ListName}} address=$1 comment="$2" timeout=$3; } on-error={ }
}
{{ end -}}

{{- range .Decisions -}}
{{ $ipv6Check := contains .Value ":" }}
{{ $scenario := .Scenario | formatScenario }}
{{- if not $ipv6Check -}}
${{$.NameOfMikrotikFunction}} "{{.Value}}" "{{$scenario}}" "{{.Duration}}"
{{- else -}}
${{$.NameOfMikrotikFunction}}v6 "{{.Value}}" "{{$scenario}}" "{{.Duration}}"
{{- end -}}
{{ end -}}

{{ if not $.IPv6Only }}
:set {{$.NameOfMikrotikFunction}};
{{- end -}}
{{ if not $.IPv4Only }}
:set {{$.NameOfMikrotikFunction}}v6;
{{- end -}}

